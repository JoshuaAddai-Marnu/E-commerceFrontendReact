{"sqlite3-editor.showHistory.title":"SQLite3 Editor: Show History","sqlite3-editor.clearHistory.title":"SQLite3 Editor: Clear History","sqlite3-editor.execute.title":"SQLite3 Editor: Execute","sqlite3-editor.executeSelection.title":"SQLite3 Editor: Execute Selection","sqlite3-editor.executescript.title":"SQLite3 Editor: Execute Entire File","sqlite3-editor.openPanel.title":"SQLite3 Editor: Open Panel","sqlite3-editor.toggleSchema.title":"SQLite3 Editor: Toggle Table Schema Visibility","sqlite3-editor.openCustomQueryEditor.title":"SQLite3 Editor: Open Custom Query Editor","sqlite3-editor.toggleAutoReload.title":"SQLite3 Editor: Toggle Auto Reload","sqlite3-editor.find.title":"SQLite3 Editor: Find","sqlite3-editor.selectTable.title":"SQLite3 Editor: Select Table","sqlite3-editor.createTable.title":"SQLite3 Editor: Create Table","sqlite3-editor.dropTable.title":"SQLite3 Editor: Drop Table","sqlite3-editor.dropView.title":"SQLite3 Editor: Drop View","sqlite3-editor.alterTableRename.title":"SQLite3 Editor: Rename Table","sqlite3-editor.insert.title":"SQLite3 Editor: Insert","sqlite3-editor.compare.title":"SQLite3 Editor: Compare Active Database With...","sqlite3-editor.openInMemoryDatabase.title":"SQLite3 Editor: Connect to In-Memory Database","sqlite3-editor.goto":"SQLite3 Editor: Go to Table/Row","sqlite3-editor.associate.title":"SQLite3 Editor: Associate Active File to a SQLite Database","sqlite3-editor.connection.setupQueries.markdownDescription":"SQL statements that are executed immediately after connecting to a database.\n\nThe keys are case-sensitive regular expressions used to match the file URI, and the values are corresponding SQL statements to be executed. In case multiple patterns match the same URI, only the first item will be used.\n\nCommands that are available in the SQLite's CLI, including `.load`, are not supported. To load run-time loadable extensions, use the `sqlite3-editor.connection.runtimeLoadableExtensions` configuration instead.\n\nExample:\n```json\n\"sqlite3-editor.connection.setupQueries\": {\n  \".*\": \"PRAGMA foreign_keys = ON; PRAGMA busy_timeout = 1000;\"\n}\n```","sqlite3-editor.connectionSetupQueries.driver.sqlite3.debug.markdownDescription":"Shows the URI matched against the regular expression patterns in connection.setupQueries and the results of the match for each pattern when an editor is opened.","sqlite3-editor.connection.runtimeLoadableExtensions.markdownDescription":"Run-time loadable extensions that are loaded immediately after connecting to a database.\n\nThe keys are case-sensitive regular expressions used to match the file URI, and the values are the list of runtime-loadable extensions to be loaded. In case multiple patterns match the same URI, only the first item will be used. The runtime-loadable extensions are loaded before executing the setup queries specified in `sqlite3-editor.connection.setupQueries`.\n\nFor example, to load the `crypto` module in sqlean, download and extract a release of [sqlean](https://github.com/nalgeon/sqlean), and specify the extracted path as follows:\n```json\n\"sqlite3-editor.connection.runtimeLoadableExtensions\": {\n  \".*\": [\"/home/user/sqlean/crypto.so\"]\n}\n```\n\nOn Alpine Linux, this feature may not work as musl is statically linked.","sqlite3-editor.telemetry.markdownDescription":"Telemetry is sent only if `telemetry.telemetryLevel` is \"all\" and `sqlite3-editor.telemetry` is \"allow\". It is disabled by default.","sqlite3-editor.ui.wrapTableHeader.markdownDescription":"Controls whether the texts in the table column header are wrapped.","sqlite3-editor.ui.alignNumberRight.markdownDescription":"If true, numbers in table cells are aligned to the right.","sqlite3-editor.ui.defaultIndexName.table.markdownDescription":"The default index name that gets filled in when creating a new index. {{tableName}} will be replaced by the table name.","sqlite3-editor.ui.defaultIndexName.tableAndColumns.markdownDescription":"The default index name that gets filled in when creating a new index. {{tableName}} will be replaced by the table name, and {{columns}} will be replaced by the column names.","sqlite3-editor.ui.recordCountingLimit.markdownDescription":"Specifies the cap on the number of records the extension will count. Lower values can help prevent performance degradation on larger tables. Set the value to -1 to disable the limit.","sqlite3-editor.ui.foreignKeyDropdownLimit.markdownDescription":"Max number of records to display in a foreign key dropdown.","sqlite3-editor.codeLens.hideExecuteAndSelectButtons.markdownDescription":"Hides the \"▷ Select\" and \"▷ Execute\" buttons above SQL statements in the Query Editor. You can still execute SQL statements by other means such as Shift+Enter.","sqlite3-editor.diagnostics.disableSyntaxCheck.markdownDescription":"Disables the syntax checker in the query editor.","sqlite3-editor.completion.functionCase.markdownDescription":"Controls whether function names in auto completions are capitalized or not.","sqlite3-editor.ui.performanceNotice.markdownDescription":"Displays a message to optimize slow query.","sqlite3-editor.comment.filepath.markdownDescription":"Controls the filepath for the comment file.\n\n## Syntax\nThe value can begin with one of the following prefix variables. If the value lacks these prefix variables, it is interpreted as an absolute path.\n\n- `${fileDirname}`: The parent directory of the database file (e.g., `/foo/bar` for `/foo/bar/db.sqlite`).\n- `${fileWorkspaceFolder}`: The currently opened folder.\n- `${userHome}`: The user's home directory on the computer.\n\nAfter the prefix or the first segment (e.g., \"C:\\\\\" or \"/\") of the absolute path, the following variables can be used anywhere and any number of times:\n\n- `${fileBasename}`: The basename of the database file (e.g., `db.sqlite` for `/foo/bar/db.sqlite`).\n- `${fileBasenameNoExtension}`: The basename of the database file without its extension (e.g., `db` for `/foo/bar/db.sqlite`).\n- `${fileExtname}`: The file extension of the database file (e.g., `.sqlite` for `/foo/bar/db.sqlite`).\n- `${fileDirnameBasename}`: The name of the parent directory of the database file (e.g., `bar` for `/foo/bar/db.sqlite`).\n\nThe configuration value must resolve to a filename that ends with \".md\" after variable replacement. Slash and backslash characters (\"/\", \"\\\\\") will be replaced with appropriate ones for the current platform."}